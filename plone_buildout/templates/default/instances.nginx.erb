upstream cache {
    server 127.0.0.1:<%= node['nginx_plone']['proxy_port'] %>;
}

upstream balancer {
    server 127.0.0.1:8080;
}

client_header_buffer_size 4k;
client_body_buffer_size 32k;

map $http_x_forwarded_proto $final_scheme {
    default $http_x_forwarded_proto;
    '' $scheme;
}
map $http_x_forwarded_proto $final_port {
    default $server_port;
    https 443;
    http 80;
}
map $final_port $hsts_header {
    default "";
    443 "<%= node['nginx_plone']['hsts_header'] %>";
}

<%= node['nginx_plone']['additional_servers'] %>

server {
    listen *:80 default_server;
    server_name _;
    gzip_types application/javascript application/x-javascript application/xhtml+xml application/xml application/xml+rss text/css text/javascript text/plain text/xml application/json text/json application/vnd.ms-fontobject application/x-font-opentype application/x-font-truetype application/x-font-ttf font/eot font/opentype font/otf image/svg+xml image/vnd.microsoft.icon;

    <% if !node['certbot_domains'].empty? %>
    include <%= node['nginx']['dir'] %>/certbot.conf;
    <% end %>
    # Show status information on /_main-status
    location = /_main_status_ {
        stub_status on;
        allow 127.0.0.1;
        deny all;
    }

    <%= node['nginx_plone']['default_config'] %>
    <%= node['nginx_plone']['additional_config'] %>

    location = <%= node[:haproxy][:stats_url] %> {
        proxy_pass http://balancer;
    }
    if ($request_filename ~* ^.*?/([^/]*?)$) {
        set $filename $1;
    }
    if ($filename ~* ^.*?\.(eot)|(ttf)|(woff)$) {
        set $is_font 1;
    }

    # Rewrite Plone URLs and proxy everything to Varnish
    location / {
        # Avoid duplicate entries in search engines due to trailing slashes
        if ( $http_user_agent ~* ^(Googlebot|msnbot|Bingbot|BingPreview|Yahoo|Baiduspider) ) {
            rewrite ^/(.*)/$ /$1 permanent;
        }
        # Remove trailing /
        rewrite ^/(.*)/$ /$1;

        # IE needs CORS headers on all fonts
        if ($is_font) {
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods GET,OPTIONS,HEAD;
        }

        rewrite ^/(.*)$ /VirtualHostBase/$final_scheme/$host:$final_port/<%= node["plone_instances"]["site_id"]%>/VirtualHostRoot/$1 break;
        proxy_pass http://cache;
        proxy_connect_timeout 90;
        proxy_read_timeout 900;
        proxy_send_timeout 900;
        send_timeout 900;
        proxy_buffer_size  256k;
        proxy_buffers      16   256k;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Accept-Encoding '';
        add_header X-Content-Type-Options "nosniff";
        add_header X-XSS-Protection "1; mode=block";
        add_header Strict-Transport-Security $hsts_header;
        add_header Content-Security-Policy "<%= node['nginx_plone']['csp_header'] %>";
        <% if node['nginx_plone']['enable_ssi'] %>ssi on;<% end %>
        <%= node['nginx_plone']['additional_location_block_config'] %>
    }
}

<% node["plone_instances"]["subsites"].each do |host, path| %>
server {
    listen *:80;
    server_name <%= host%>;
    gzip_types application/javascript application/x-javascript application/xhtml+xml application/xml application/xml+rss text/css text/javascript text/plain text/xml application/json text/json application/vnd.ms-fontobject application/x-font-opentype application/x-font-truetype application/x-font-ttf font/eot font/opentype font/otf image/svg+xml image/vnd.microsoft.icon;

    <% if !node['certbot_domains'].empty? %>
    include <%= node['nginx']['dir'] %>/certbot.conf;
    <% end %>

    if ($request_filename ~* ^.*?/([^/]*?)$) {
        set $filename $1;
    }
    if ($filename ~* ^.*?\.(eot)|(ttf)|(woff)$) {
        set $is_font 1;
    }

    <%= node['nginx_plone']['additional_config'] %>
    <% if !node['plone_instances']['subsite_config'].nil? && node['plone_instances']['subsite_config'].has_key?(host) %>
        <%= node['plone_instances']['subsite_config'][host] =%>
    <% end %>

    location / {
        # Avoid duplicate entries in search engines due to trailing slashes
        if ( $http_user_agent ~* ^(Googlebot|msnbot|Bingbot|BingPreview|Yahoo|Baiduspider) ) {
            rewrite ^/(.*)/$ /$1 permanent;
        }
        # Remove trailing /
        rewrite ^/(.*)/$ /$1;

        # IE needs CORS headers on all fonts
        if ($is_font) {
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods GET,OPTIONS,HEAD;
        }

        rewrite ^/(.*)$ /VirtualHostBase/$final_scheme/$host:$final_port/<%= node["plone_instances"]["site_id"]%>/<%= path%>/VirtualHostRoot/$1 break;
        proxy_pass http://cache;
        proxy_connect_timeout 90;
        proxy_read_timeout 900;
        proxy_send_timeout 900;
        send_timeout 900;
        proxy_buffer_size  256k;
        proxy_buffers      16   256k;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Accept-Encoding '';
        add_header X-Content-Type-Options "nosniff";
        add_header X-XSS-Protection "1; mode=block";
        add_header Strict-Transport-Security $hsts_header;
        add_header Content-Security-Policy "<%= node['nginx_plone']['csp_header'] %>";
        <% if node['nginx_plone']['enable_ssi'] %>ssi on;<% end %>
        <%= node['nginx_plone']['additional_location_block_config'] %>
    }
}
<% end %>
