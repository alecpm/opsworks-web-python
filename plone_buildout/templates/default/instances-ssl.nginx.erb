<% @domains.each do |domain, path| %>
<% if domain != @application[:application] || @domains.length == 1 %>
server {
    listen  443<%= ' http2' if node['nginx_plone']['enable_http2'] %><%= ' default_server' if domain == '_' %>;
    server_name <%= domain %>;
    ssl on;
    ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
    <% if node['certbot_domains'] && !node['certbot_domains'].empty?  %>
      ssl_certificate <%= node['certbot']['config_dir'] %>/live/<%= @key_name %>/fullchain.pem;
      ssl_certificate_key <%= node['certbot']['config_dir'] %>/live/<%= @key_name %>/privkey.pem;
      ssl_client_certificate <%= node['certbot']['config_dir'] %>/live/<%= @key_name %>/chain.pem;
    <% elsif @application[:ssl_certificate] %>
      ssl_certificate /etc/nginx/ssl/<%= @application[:domains].first %>.crt;
      ssl_certificate_key /etc/nginx/ssl/<%= @application[:domains].first %>.key;
      <% if @application[:ssl_certificate_ca] %>
      ssl_client_certificate /etc/nginx/ssl/<%= @application[:domains].first %>.ca;
      <% end %>
    <% end %>
    ssl_session_cache   shared:SSL:10m;
    ssl_session_timeout 10m;
    keepalive_timeout 30;
    gzip_types application/javascript application/x-javascript application/xhtml+xml application/xml application/xml+rss text/css text/javascript text/plain text/xml application/json text/json application/vnd.ms-fontobject application/x-font-opentype application/x-font-truetype application/x-font-ttf font/eot font/opentype font/otf image/svg+xml image/vnd.microsoft.icon;

    <% if !node['certbot_domains'].empty? %>
    include <%= node['nginx']['dir'] %>/certbot.conf;
    <% end %>

    <%= node['nginx_plone']['default_ssl_config'] if domain == '_' %>
    <%= node['nginx_plone']['additional_ssl_config'] %>
    <% if !node['plone_instances']['subsite_config'].nil? && node['plone_instances']['subsite_config'].has_key?(domain) %>
        <%= node['plone_instances']['subsite_config'][domain] =%>
    <% end %>

    if ($request_filename ~* ^.*?/([^/]*?)$) {
        set $filename $1;
    }
    if ($filename ~* ^.*?\.(eot)|(ttf)|(woff)$) {
        set $is_font 1;
    }

    # Rewrite Plone URLs and proxy everything to Varnish
    location / {
        # Avoid duplicate entries in search engines due to trailing slashes
        if ( $http_user_agent ~* ^(Googlebot|msnbot|Bingbot|BingPreview|Yahoo|Baiduspider) ) {
            rewrite ^/(.*)/$ /$1 permanent;
        }
        # Remove trailing /
        rewrite ^/(.*)/$ /$1;

        # IE needs CORS headers on all fonts
        if ($is_font) {
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods GET,OPTIONS,HEAD;
        }

        rewrite ^/(.*)$ /VirtualHostBase/$final_scheme/$http_host:$final_port/<%= path %>/VirtualHostRoot/$1 break;
        proxy_pass http://cache;
        proxy_connect_timeout 90;
        proxy_read_timeout 900;
        proxy_send_timeout 900;
        send_timeout 900;
        proxy_buffer_size  256k;
        proxy_buffers      16   256k;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Accept-Encoding '';
        add_header X-Content-Type-Options "nosniff";
        add_header X-XSS-Protection "1; mode=block";
        add_header Strict-Transport-Security "<%= node['nginx_plone']['hsts_header'] %>";
        add_header Content-Security-Policy "<%= node['nginx_plone']['csp_header'] %>";
        <% if node['nginx_plone']['enable_ssi'] %>ssi on;<% end %>
        <%= node['nginx_plone']['additional_location_block_config'] %>
    }

}
<% end %>
<% end %>
